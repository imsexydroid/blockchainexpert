{"name":"Advanced Solidity","lessons":[{"uid":"math-and-arithmetic","name":"Math and Arithmetic","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"description":"Everyone knows how dangerous math can be! Thankfully, though, Solidity provides us with a library named SafeMath so that we can practice safe math.\n","video":{"vimeoId":"751371259","duration":11,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"54504672","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"15633396","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"94732197","type":"MCQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"math-utils","type":"CODING_STANDARD","name":"Math Utils","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0}],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[],"section":"","hasCodeExample":false},{"uid":"time-and-time-units","name":"Time and Time Units","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"description":"Time is one of the most common inputs for a smart contract to react to as part of its execution. So grab a snack or a beverage and make some time for this lesson!\n","video":{"vimeoId":"751370420","duration":9,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"82759159","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"92994180","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"1239807913","type":"CODING_STANDARD","name":"Question 3","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0}],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"Time Units","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Solidity, there are various built in \u003cstrong\u003etime units\u003c/strong\u003e. These\n    units make it easier to work with time and timestamps. The following are the\n    valid time units in Solidity.\n  \u003c/p\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003cspan\u003eseconds\u003c/span\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cspan\u003eminutes\u003c/span\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cspan\u003ehours\u003c/span\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cspan\u003edays\u003c/span\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cspan\u003eweeks\u003c/span\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Unix Epoch","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    The \u003cstrong\u003eUnix\u003c/strong\u003e epoch is the time 00:00:00 UTC on 1 January 1970.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"solidity-structs","name":"Structs","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"description":"This lesson will in-struct—pun intended—you on the topic of structs.\n","video":{"vimeoId":"751372146","duration":15,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"shopping-list","type":"CODING_STANDARD","name":"Shopping List","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0}],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"Struct","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Solidity, a \u003cspan\u003estruct\u003c/span\u003e is a typed collection of fields that can\n    be treated like a custom type. Structs are useful for grouping data\n    together.\n  \u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"code-wrapper prism\"\u003e\n\u003cpre class=\"line-numbers\"\u003e\u003ccode class=\"language-solidity\"\u003estruct Book { \n  string title;\n  string author;\n  uint book_id;\n}\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"modifiers","name":"Modifiers","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":true,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"description":"Modifiers serve to modify the behaviour of a function. Shocking, we know.\n","video":{"vimeoId":"751897329","duration":15,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"68768888","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"49969745","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"47743055","type":"MCQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"restricted-count","type":"CODING_STANDARD","name":"Restricted Count","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0}],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"Modifier","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Solidity, a \u003cstrong\u003emodifier\u003c/strong\u003e is used to modify the behavior of a\n    function, typically to check repetitive preconditions. Modifiers must\n    include at least one \u003cspan\u003e_\u003c/span\u003e, which represents a call to the modified\n    function. See below for an example of a modifier.\n  \u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"code-wrapper prism\"\u003e\n\u003cpre class=\"line-numbers\"\u003e\u003ccode class=\"language-solidity\"\u003emodifier onlyOwner {\n  require(msg.sender == owner);\n  _;\n}\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"solidity-enum","name":"Enums","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"description":"In this lesson, we'll enumerate all the problems that enums solve. See what we did there?\n","video":{"vimeoId":"751875963","duration":6,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"22021769","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"fancy-shirts","type":"CODING_STANDARD","name":"Fancy Shirts","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0}],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"Enum","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Solidity, \u003cspan\u003eenum\u003c/span\u003e's are a type that allow you to restrict a\n    variable to a predefined list of values. \u003cspan\u003eenum\u003c/span\u003e stands for\n    enumeration and can be defined as follows.\n  \u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"code-wrapper prism\"\u003e\n  \u003cpre class=\"line-numbers\"\u003e\u003ccode class=\"language-solidity\"\u003eenum Sizes {\n  SMALL,  // 0\n  MEDIUM, // 1\n  LARGE   // 2\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e\n\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    Each value in an \u003cspan\u003eenum\u003c/span\u003e is encoded with a \u003cspan\u003euint\u003c/span\u003e value\n    starting from \u003cspan\u003e0\u003c/span\u003e.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"solidity-inheritance","name":"Inheritance","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"description":"Much like biological organisms pass down traits from parent to offspring through the process of heredity, smart contracts pass down properties from parent to child through the process of inheritance.\n","video":{"vimeoId":"753644281","duration":34,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"70231607","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"50411019","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"72915580","type":"MCQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"6659450","type":"MCQ","name":"Question 4","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"30174731","type":"MCQ","name":"Question 5","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"taxed-item","type":"CODING_STANDARD","name":"TaxedItem","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0}],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"Inheritance","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Solidity, \u003cstrong\u003einheritance\u003c/strong\u003e refers to when a contract\n    derives/uses the functionality from another contract. Inheritance is a way\n    of reusing/extending functionality.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"solidity-abstract-contracts","name":"Abstract Contracts","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"description":"Warning: this is a tricky topic! Abstract contracts are—both ironically and unsurprisingly—fairly abstract.\n","video":{"vimeoId":"753646113","duration":11,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"1450763","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"78709260","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"89921023","type":"MCQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"sign-up-bonus","type":"CODING_STANDARD","name":"Sign Up Bonus","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0}],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"Abstract Contract","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    An \u003cstrong\u003eabstract contract\u003c/strong\u003e is only used as a base/parent contract\n    and cannot be instantiated. It typically contains at least one abstract\n    function (i.e., a function marked as \u003cspan\u003evirtual\u003c/span\u003e).\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"be-interfaces","name":"Interfaces","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"description":"The only thing more abstract than an abstract contract.\n","video":{"vimeoId":"753647439","duration":13,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"83604405","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"91201261","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"comparable-interface","type":"CODING_STANDARD","name":"Comparable Interface","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0}],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"Interface","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Solidity, \u003cstrong\u003einterfaces\u003c/strong\u003e are used to declare the\n    functionality that deriving/implementing contracts must override. Interfaces\n    are used to view different contracts through the same type. They have the\n    following properties.\n  \u003c/p\u003e\n  \u003cul\u003e\n    \u003cli\u003eMay not have any function with implementation.\u003c/li\u003e\n    \u003cli\u003eAll defined functions must be marked as \u003cspan\u003eexternal\u003c/span\u003e.\u003c/li\u003e\n    \u003cli\u003eMay not have a constructor.\u003c/li\u003e\n    \u003cli\u003eMay not have state variables.\u003c/li\u003e\n    \u003cli\u003eMay define enums and structs.\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/div\u003e\n\u003cdiv class=\"code-wrapper prism\"\u003e\n  \u003cpre class=\"line-numbers\"\u003e\u003ccode class=\"language-solidity\"\u003einterface Numeric {\n  function add(uint x) external returns (uint);  \n  function subtract(uint x) external returns (uint);  \n}\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"libraries","name":"Libraries","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"description":"Digital libraries are just as expansive and full of knowledge as their real-world counterparts, sans the aged leather and oak smell.\n","video":{"vimeoId":"753649206","duration":13,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"46119951","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"array-library","type":"CODING_STANDARD","name":"Array Library","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0}],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"Library","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Solidity, a \u003cstrong\u003elibrary\u003c/strong\u003e is a collection of reusable utility\n    functions. Libraries contain functions that are called by other contracts\n    and can be deployed independently to save on gas and avoid repeated code.\n  \u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"code-wrapper prism\"\u003e\n\u003cpre class=\"line-numbers\"\u003e\u003ccode class=\"language-solidity\"\u003elibrary Math {\n  function pow(uint a, uint b) public view returns (uint) {\n      return a ** b;\n  }\n}\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"contract-storage","name":"Contract Storage","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"description":"Solidity offers multiple different storage locations. Your task: store the contents of this lesson into the best storage location of them all: your brain.\n","video":{"vimeoId":"754524706","duration":15,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"33005957","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"92677568","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"5211970","type":"MCQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"42039530","type":"MCQ","name":"Question 4","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null}],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"Calldata","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Solidity, \u003cspan\u003ecalldata\u003c/span\u003e is a read-only, non-persistent storage\n    location that is used for function parameters. It behaves similarly to\n    \u003cspan\u003ememory\u003c/span\u003e but it cannot be modified.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Memory","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Solidity, \u003cspan\u003ememory\u003c/span\u003e is a temporary, mutable storage location\n    that is typically used for holding reference data types.\n    \u003cspan\u003ememory\u003c/span\u003e is a cheaper storage location than contract storage.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Storage","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Solidity, \u003cspan\u003estorage\u003c/span\u003e is a persistent location where data\n    associated with a smart contract is held. Storage variable data is stored on\n    the blockchain and is very expensive to read and write from.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Logs","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    Ethereum smart contracts can emit events, these events are stored in\n    transaction receipts in a special area known as \u003cstrong\u003elogs\u003c/strong\u003e. Logs\n    give you information about what happened during smart contract execution.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Stack","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In the context of the EVM/Solidity, the \u003cstrong\u003estack\u003c/strong\u003e is an\n    temporary internal storage location where variables are stored in 32-byte\n    slots. It is used for small local variables and the value types of functions\n    (i.e., the type of parameters and return values).\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"optimizing-gas","name":"Optimizing Gas Costs","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"description":"Poorly optimized smart contracts can quickly become voracious gas consumers. In this lesson, we'll show you some tricks you can use to keep your smart contracts in check and make them less gassy.\n","video":{"vimeoId":"755233621","duration":27,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"30023132","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"24581035","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"38375454","type":"MCQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"65456542","type":"MCQ","name":"Question 4","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"23119752","type":"MCQ","name":"Question 5","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null}],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[],"section":"","hasCodeExample":false}],"assessment":{"uid":"advanced-solidity-assessment","name":"Advanced Solidity Assessment","questions":[{"uid":"friend-requests","type":"CODING_STANDARD","name":"Friend Requests","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0},{"uid":"solidity-workplace","type":"CODING_STANDARD","name":"Blockchain Workplace","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0},{"uid":"score-tracker","type":"CODING_STANDARD","name":"Score Tracker","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0},{"uid":"blockchain-road-trip","type":"CODING_STANDARD","name":"Blockchain Road Trip","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0}]}}
