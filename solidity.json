{"name":"Solidity Fundamentals","lessons":[{"uid":"metamask-setup","name":"MetaMask Setup","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"description":"A versatile Ethereum wallet with a cuter Fox logo than Firefox—what's not to love?\n","video":{"vimeoId":"742006197","duration":12,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"34135398","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"42381571","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null}],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"Metamask","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    \u003cstrong\u003eMetamask\u003c/strong\u003e is a browser extension and mobile application that\n    provides a cryptocurrency wallet and makes it simple to interact with DApp's\n    and send/receive Ethereum and other cryptocurrencies.\n  \u003c/p\u003e\n  \u003cp\u003e\n    You can download it from\n    \u003ca class=\"Link Link--bce\" href=\"https://metamask.io/\" target=\"_blank\"\u003ehere\u003c/a\u003e.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"remix-ide","name":"Remix IDE","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"description":"A popular IDE for smart contract development with a cool name to boot!\n","video":{"vimeoId":"742005500","duration":10,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"Remix","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    \u003cstrong\u003eRemix\u003c/strong\u003e is a free IDE (integrated development environment)\n    for smart contract development. It is available in-browser or as a desktop\n    application.\n  \u003c/p\u003e\n  \u003cp\u003e\n    You can download it\n    \u003ca href=\"https://remix-project.org/\" target=\"_blank\"\u003ehere\u003c/a\u003e.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"first-smart-contract","name":"Your First Smart Contract","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"description":"This lesson will guide you to writing your first smart contract, an accomplishment that will undoubtedly become one of your life's fondest memories.\n","video":{"vimeoId":"742009243","duration":12,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"41952291","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"47612361","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"13327326","type":"MCQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"530798","type":"MCQ","name":"Question 4","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null}],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"Pragma Line","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Solidity, the \u003cspan\u003epragma\u003c/span\u003e line is placed at the beginning of a\n    code file to indicate the solidity compiler version(s) that can be used for\n    this contract.\n  \u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"code-wrapper prism\"\u003e\n\u003cpre class=\"line-numbers\"\u003e\u003ccode class=\"language-solidity\"\u003epragma solidity \u003e=0.7.0 \u0026lt;0.9.0;\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"smart-contract-theory","name":"Smart Contract Theory","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"description":"It's time to dive deeper into the weeds of smart contract theory in our quest for smart contract mastery.\n","video":{"vimeoId":"742017445","duration":21,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"19328774","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"15505796","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"56249240","type":"MCQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"80299612","type":"MCQ","name":"Question 4","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"15094384","type":"MCQ","name":"Question 5","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null}],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"Transaction","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In the context of blockchains, a \u003cstrong\u003etransaction\u003c/strong\u003e (commonly\n    denoted \"tx\") represents a state changing operation. It may represent the\n    transfer of coins or the invocation of a smart contract.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Call","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In the context of smart contracts, a \u003cstrong\u003ecall\u003c/strong\u003e is a free\n    operation that reads information from a smart contract. Calls do not require\n    transactions and cannot modify the state of a smart contract.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Gas","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In the context of Ethereum, \u003cstrong\u003egas\u003c/strong\u003e is a fee required to\n    execute transactions or smart contracts. Gas is paid in Ether and is denoted\n    in gwei.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Source Code","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    \u003cstrong\u003eSource code\u003c/strong\u003e is the code that the programmers write and\n    read.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Bytecode","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    \u003cb\u003eBytecode\u003c/b\u003e is program code that has been compiled from source code into\n    a lower level language that can be understood by an interpreter.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"deploying-smart-contracts","name":"Deploying Smart Contracts","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"description":"How do you deploy smart contracts to an actual live network? You've got questions, we've got answers.\n","video":{"vimeoId":"743518612","duration":15,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"EVM","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    \u003cstrong\u003eEVM\u003c/strong\u003e stands for Ethereum Virtual Machine. The EVM is a\n    computation engine that runs on Ethereum nodes such as miners. The EVM\n    allows for the execution of smart contracts and is the foundation for\n    Ethereum's entire operating structure.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"data-types","name":"Data Types","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"description":"What do Pokémon and Solidity data have in common? They both come in a variety of different types!\n","video":{"vimeoId":"743519767","duration":13,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"88966680","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"23906634","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"53862112","type":"MCQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"8267779","type":"MCQ","name":"Question 4","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"basic-data-types-and-variable","type":"CODING_STANDARD","name":"Data Types and Variables","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0}],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"Data Types","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Solidity, data types are seperated into value types and reference types.\n    The common value types are as follows.\n  \u003c/p\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003cspan\u003euint\u003c/span\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cspan\u003eint\u003c/span\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cspan\u003ebool\u003c/span\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cspan\u003eaddress\u003c/span\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cspan\u003ebytes\u003c/span\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"operators","name":"Operators \u0026 Type Conversions","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"description":"What do Porygon (the Pokémon) and Solidity have in common? They can both convert types!\n","video":{"vimeoId":"743520464","duration":14,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"counter","type":"CODING_STANDARD","name":"Counter","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0},{"uid":"xor","type":"CODING_STANDARD","name":"XOR","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0}],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"Logical Operators","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Solidity, the \u003cstrong\u003elogical operators\u003c/strong\u003e and, or and not are\n    implemented using the following symbols.\n  \u003c/p\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003cspan\u003e\u0026\u0026\u003c/span\u003e = and\u003c/li\u003e\n    \u003cli\u003e\u003cspan\u003e||\u003c/span\u003e = or\u003c/li\u003e\n    \u003cli\u003e\u003cspan\u003e!\u003c/span\u003e = not\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"conditionals","name":"Conditionals","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"description":"Conditionals are just as fundamental to Solidity as they are to most other programming languages, so don't skip this video. No ifs and \u003cs\u003eelses\u003c/s\u003e buts about it!\n","video":{"vimeoId":"743521353","duration":6,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"comparison","type":"CODING_STANDARD","name":"Comparison","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0},{"uid":"comparison-2","type":"CODING_STANDARD","name":"Comparison 2","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0}],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"Conditional Operators","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003eSolidity has the following \u003cstrong\u003econditional operators\u003c/strong\u003e.\u003c/p\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003cspan\u003e\u003c\u003c/span\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cspan\u003e\u003c=\u003c/span\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cspan\u003e\u0026gt;=\u003c/span\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cspan\u003e==\u003c/span\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cspan\u003e!=\u003c/span\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"mappings","name":"Mappings","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":true,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"description":"Solidity's version of dictionaries allows you to store and look up key-value pairs, much like a physical dictionary lets you look up words and their associated definition.\n","video":{"vimeoId":"744361207","duration":15,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"mappings-question","type":"CODING_STANDARD","name":"Mappings","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0},{"uid":"nested-mappings","type":"CODING_STANDARD","name":"Nested Mappings","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0}],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"Mapping","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Solidity, the reference data type known as \u003cspan\u003emapping\u003c/span\u003e allows\n    you to store key-value pairs. Mappings can only be stored in\n    contract storage and are useful for quickly accessing associated data.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"functions-and-access-modifiers","name":"Functions And Access Modifiers","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"description":"Like in many other programming languages, functions in Solidity come with a variety of access and behavioral modifiers.\n","video":{"vimeoId":"744363128","duration":15,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"75640723","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"47923070","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"68025447","type":"MCQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"28769384","type":"MCQ","name":"Question 4","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"39759311","type":"MCQ","name":"Question 5","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"80528636","type":"MCQ","name":"Question 6","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null}],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"Public","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Solidity, \u003cspan\u003epublic\u003c/span\u003e is a visibility modifer that can be used to\n    mark variables and functions as accessible from within or outside of the\n    contract. Any variable or function marked as public can be accessed from any\n    location.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Private","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Solidity, the \u003cspan\u003eprivate\u003c/span\u003e visibility modifer is used to mark a\n    function or variable as only accessible from within the contract it is\n    defined in. Private functions and variables cannot be accessed from any\n    derived contracts, outside the blockchain or any location other than the\n    contract they are defined in.\n  \u003c/p\u003e\n  \u003cp\u003e\n    Note: even if something is marked as \u003cspan\u003eprivate\u003c/span\u003e it's value can\n    still be read from outside of the blockchain. This is because everything on\n    the blockchain is publicly available and transparent.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Internal","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Solidity, \u003cspan\u003einternal\u003c/span\u003e is a visibility modifier than can be used\n    to mark functions and variables as only accessible from within the contract\n    or any derived contracts. \u003cspan\u003einternal\u003c/span\u003e functions can only be called\n    from the contract they are defined in.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"External","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Solidity, \u003cspan\u003eexternal\u003c/span\u003e is a visibility modifier than can be used\n    to mark functions as only callable from outside of the contract itself.\n    \u003cspan\u003eexternal\u003c/span\u003e functions can only be called from outside of the\n    blockchain or from another smart contract.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Pure","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Solidity, a \u003cspan\u003epure\u003c/span\u003e function is one that does not rely on any\n    contract state to execute. However, pure functions can call other pure\n    functions and utilize types like structs and enums.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"View","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Solidity, a \u003cspan\u003eview\u003c/span\u003e function is one that does not mutate/modify\n    the state of a contract but may read it. View functions can read contract\n    state and call other view and pure functions.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"global-keywords","name":"Global Keywords","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"description":"Solidity's global variables are unique and very blockchainy in flavor, certainly unlike anything you've seen in other languages. Don't skip this lesson!\n","video":{"vimeoId":"744367502","duration":13,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"15847246","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"67087572","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"50625007","type":"MCQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null}],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"Global Keywords","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Solidity, there are various \u003cstrong\u003eglobal keywords\u003c/strong\u003e that give\n    you information about the current block, transaction and more. The following\n    is a subset of these global keywords.\n  \u003c/p\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003cspan\u003eblock\u003c/span\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cspan\u003emsg\u003c/span\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cspan\u003etx\u003c/span\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"sending-and-receiving-eth","name":"Sending And Receiving Eth","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":true,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"description":"How do you actually receive and send Ether into and from a smart contract? This lesson will show you the wei.\n","video":{"vimeoId":"745532294","duration":35,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"5698271","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"79079547","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"21244632","type":"MCQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"richest","type":"CODING_STANDARD","name":"Richest","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0},{"uid":"receive-fallback","type":"CODING_STANDARD","name":"Receiving Ethereum","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0}],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"Ether Units","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    Solidity provides built-in keywords that make working with amounts of Ether\n    easier.\n  \u003c/p\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003cspan\u003ewei\u003c/span\u003e: the smallest unit of ether.\u003c/li\u003e\n    \u003cli\u003e\u003cspan\u003egwei\u003c/span\u003e: equal to 1,000,000,000 wei or 10e9 wei.\u003c/li\u003e\n    \u003cli\u003e\n      \u003cspan\u003eether\u003c/span\u003e: equal to 1,000,000,000,000,000,000 wei or 10e18 wei.\n    \u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"exceptions-and-errors","name":"Exceptions And Errors","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"description":"Proper error handling is exceptionally important in Solidity, since the language doesn't give users feedback by default in the case of transaction failure.\n","video":{"vimeoId":"745538554","duration":16,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"60404085","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"78004230","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"27031533","type":"MCQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"voting","type":"CODING_STANDARD","name":"Voting","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0}],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"Require","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    \u003cspan\u003erequire\u003c/span\u003e is a Solidity function that is used for error handling.\n    If the condition passed to a \u003cspan\u003erequire\u003c/span\u003e function returns false\n    than the transaction will fail and the state of the contract will revert.\n    \u003cspan\u003erequire\u003c/span\u003e is typically used to check for preconditions that\n    should be true before executing a block of code.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Assert","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    \u003cspan\u003eassert\u003c/span\u003e is a Solidity function that is used for error handling.\n    If the condition passed to an \u003cspan\u003eassert\u003c/span\u003e function returns false\n    than the transaction will fail and the state of the contract will revert.\n    \u003cspan\u003eassert\u003c/span\u003e is typically used to check for conditions that should\n    never be false.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Revert","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    \u003cspan\u003erevert\u003c/span\u003e is a Solidity function that when called causes a\n    transaction to fail and the state of the contract to revert.\n    \u003cspan\u003erevert\u003c/span\u003e is typically used as an alternative to\n    \u003cspan\u003erequire\u003c/span\u003e when you are dealing with complex logic.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"constructors","name":"Constructors","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"description":"This one-and-done function's lifespan is even more ephemeral than that of a butterfly.\n","video":{"vimeoId":"745540049","duration":7,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"60568849","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"constructor-owner","type":"CODING_STANDARD","name":"Owner","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0}],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"Constructor","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Solidity, a contract \u003cspan\u003econstructor\u003c/span\u003e is called one time when the\n    contract is deployed. This \u003cspan\u003econstructor\u003c/span\u003e is used to initialize\n    values or accept initial values required by the contract.\n  \u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"code-wrapper prism\"\u003e\n\u003cpre class=\"line-numbers\"\u003e\u003ccode class=\"language-solidity\"\u003econtract Constructor {\n  uint count;\n\n  constructor (uint startingCount) {\n    count = startingCount;\n  }  \n}\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"self-destruct","name":"Self Destruct","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"description":"Not quite as destructive as Voltorb's signature move.\n\nOkay, okay, we promise we're done with the Pokémon references.\n","video":{"vimeoId":"745918407","duration":12,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"7717423","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"67269623","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"31557398","type":"MCQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"multiple-depositors","type":"CODING_STANDARD","name":"Multiple Depositors","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0}],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"Self Destruct","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Solidity, the \u003cspan\u003eselfdestruct\u003c/span\u003e function removes a smart contract\n    from the blockchain and sends the balance of that contract to a provided\n    address.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"events","name":"Events","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"description":"Unfortunately, this lesson about events isn't particularly eventful.\n","video":{"vimeoId":"745919359","duration":14,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"68507285","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"57581400","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"88946485","type":"MCQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"20117664","type":"MCQ","name":"Question 4","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"event-count","type":"CODING_STANDARD","name":"Event Count","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0}],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"Event","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    \u003cstrong\u003eEvents\u003c/strong\u003e are emitted by smart contracts and stored in\n    transaction logs. They are useful for tramsitting information from a smart\n    contract to outside of the blockchain network. Clients sitting outside of\n    the blockchain can query event data or listen for specific events to occur.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"arrays","name":"Arrays","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"description":"Arrays in Solidity are largely the same as arrays in other languages: a data structure that is used to store stuff.\n","video":{"vimeoId":"745936866","duration":24,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"88735781","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"56438693","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"friends","type":"CODING_STANDARD","name":"Friends","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0}],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"Fixed-Sized Array","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    A \u003cstrong\u003efixed-sized array\u003c/strong\u003e is a data structure whose size is\n    determined when it is created/allocated and cannot change.\n  \u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"code-wrapper prism\"\u003e\n\u003cpre class=\"line-numbers\"\u003e\u003ccode class=\"language-solidity\"\u003euint[5] fixedArray = [1, 2, 3, 4, 5]\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Dynamic-Sized Array","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    A \u003cstrong\u003edynamic-sized array\u003c/strong\u003e is an data structure that allows\n    elements to be removed or added and can change it's size. In Solidity,\n    dynamic-sized arrays can only be defined in storage and have access to\n    methods such as \u003cspan\u003e.push()\u003c/span\u003e and \u003cspan\u003e.pop()\u003c/span\u003e.\n  \u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"code-wrapper prism\"\u003e\n\u003cpre class=\"line-numbers\"\u003e\u003ccode class=\"language-solidity\"\u003euint[] dynamicArray;\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"strings","name":"Strings","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"description":"This lesson about strings is secretly a lesson about bytes.\n","video":{"vimeoId":"747101038","duration":13,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"55077772","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"57699868","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"string-generator","type":"CODING_STANDARD","name":"String Generator","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0}],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"Strings","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Solidity, the \u003cspan\u003estring\u003c/span\u003e data type is used to store UTF-8\n    encoded characters. Strings are not very flexible, are expensive to use and\n    difficult to manipulate. For this reason it is preferred to use the\n    \u003cspan\u003ebytes\u003c/span\u003e type when possible.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Bytes","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Solidity, the \u003cspan\u003ebytes\u003c/span\u003e type represents an array of bytes. It is\n    useful for storing characters as raw data. The \u003cspan\u003ebytes\u003c/span\u003e type must\n    be stored in \u003cspan\u003ememory\u003c/span\u003e, \u003cspan\u003ecalldata\u003c/span\u003e or\n    \u003cspan\u003estorage\u003c/span\u003e.\n  \u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"code-wrapper prism\"\u003e\n\u003cpre class=\"line-numbers\"\u003e\u003ccode class=\"language-solidity\"\u003ebytes myRawData = \"hello world\";\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"loops","name":"Loops","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":true,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"description":"Be mindful of loops in Solidity! Unlike their counterparts in other programming languages, Solidity loops can easily run out of gas...literally.\n","video":{"vimeoId":"747102710","duration":12,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"12846270","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"create-grid","type":"CODING_STANDARD","name":"Create Grid","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0}],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[],"section":"","hasCodeExample":false},{"uid":"gas-cost-and-estimation","name":"Gas Cost And Estimation","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"description":"The definitive video on gas. Did it suddenly get smelly in here?\n","video":{"vimeoId":"748907586","duration":24,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"9160633","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"55085919","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"largest-holders","type":"CODING_STANDARD","name":"Largest Holders","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0}],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"Gas","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In the context of Ethereum, \u003cstrong\u003egas\u003c/strong\u003e is a fee required to\n    execute transactions or smart contracts. Gas is paid in Ether and is denoted\n    in gwei.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false}],"assessment":{"uid":"solidity-fundamentals-assessment","name":"Solidity Fundamentals Assessment","questions":[{"uid":"advanced-counter","type":"CODING_STANDARD","name":"Advanced Counter","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0},{"uid":"greedy-banker","type":"CODING_STANDARD","name":"Greedy Banker","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0},{"uid":"ether-election","type":"CODING_STANDARD","name":"Ether Election","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0},{"uid":"ether-math","type":"CODING_STANDARD","name":"Ether Math","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0},{"uid":"fizz-buzz-solidity","type":"CODING_STANDARD","name":"Fizz Buzz","releaseDate":"2022-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["blockchainexpert"],"isAvailable":true},"instructor":"","category":"Solidity","difficulty":0}]}}
